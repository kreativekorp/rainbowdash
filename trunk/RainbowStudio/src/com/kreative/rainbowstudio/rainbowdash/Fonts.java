package com.kreative.rainbowstudio.rainbowdash;

public class Fonts {
	private static final byte[][] FONT_8x8 = new byte[][] {
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* null */
		{ (byte)0x10, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* grave */
		{ (byte)0x14, (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* dbl acute */
		{ (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* dot */
		{ (byte)0x18, (byte)0x24, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ring */
		{ (byte)0x28, (byte)0x10, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* caron */
		{ (byte)0x24, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* breve */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08 }, /* ogonek */
		{ (byte)0x00, (byte)0x3F, (byte)0x55, (byte)0x89, (byte)0x89, (byte)0x55, (byte)0x3F, (byte)0x00 }, /* bksp */
		{ (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x0A, (byte)0xFE, (byte)0x0A, (byte)0x12, (byte)0x00 }, /* tab */
		{ (byte)0x00, (byte)0x00, (byte)0xC6, (byte)0x00, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0x00 }, /* enter */
		{ (byte)0x00, (byte)0x00, (byte)0xCE, (byte)0x20, (byte)0x10, (byte)0x08, (byte)0x06, (byte)0x00 }, /* alt */
		{ (byte)0x00, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0xEE, (byte)0x28, (byte)0x38, (byte)0x00 }, /* shift */
		{ (byte)0x00, (byte)0x02, (byte)0x22, (byte)0x42, (byte)0xFE, (byte)0x40, (byte)0x20, (byte)0x00 }, /* return */
		{ (byte)0x00, (byte)0x14, (byte)0x20, (byte)0x7C, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x00 }, /* fi */
		{ (byte)0x00, (byte)0x1C, (byte)0x24, (byte)0x74, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x00 }, /* fl */
		{ (byte)0x00, (byte)0xA0, (byte)0xC0, (byte)0xCA, (byte)0xAC, (byte)0x0C, (byte)0x0A, (byte)0x00 }, /* KK */
		{ (byte)0x00, (byte)0x04, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x40, (byte)0x80, (byte)0x00 }, /* fract */
		{ (byte)0x00, (byte)0x1C, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0xD0, (byte)0x30, (byte)0x10 }, /* sqrt */
		{ (byte)0x00, (byte)0xF8, (byte)0x44, (byte)0x20, (byte)0x10, (byte)0x20, (byte)0x44, (byte)0xF8 }, /* sum */
		{ (byte)0x00, (byte)0xFC, (byte)0x48, (byte)0x48, (byte)0x48, (byte)0x48, (byte)0x48, (byte)0x00 }, /* prod */
		{ (byte)0x00, (byte)0x0C, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x60 }, /* int */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x28, (byte)0x28, (byte)0x44, (byte)0x7C, (byte)0x00 }, /* delta */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0xCC, (byte)0x48, (byte)0xCC, (byte)0x00 }, /* omega */
		{ (byte)0x00, (byte)0x00, (byte)0xFC, (byte)0x48, (byte)0x48, (byte)0x48, (byte)0x48, (byte)0x00 }, /* pi */
		{ (byte)0x00, (byte)0x38, (byte)0x04, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* deriv */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x58, (byte)0xB4, (byte)0x68, (byte)0x00, (byte)0x00 }, /* inf */
		{ (byte)0x00, (byte)0xE0, (byte)0xC8, (byte)0xA4, (byte)0x14, (byte)0x44, (byte)0x38, (byte)0x00 }, /* esc */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x78, (byte)0x00 }, /* <= */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x00 }, /* != */
		{ (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x10, (byte)0x20, (byte)0x00, (byte)0x78, (byte)0x00 }, /* >= */
		{ (byte)0x00, (byte)0x00, (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x34, (byte)0x58, (byte)0x00 }, /* approx */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* space */
		{ (byte)0x00, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00, (byte)0x10, (byte)0x00 }, /* ! */
		{ (byte)0x00, (byte)0x24, (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* " */
		{ (byte)0x00, (byte)0x48, (byte)0xFC, (byte)0x48, (byte)0x48, (byte)0xFC, (byte)0x48, (byte)0x00 }, /* # */
		{ (byte)0x10, (byte)0x78, (byte)0x84, (byte)0x60, (byte)0x18, (byte)0x84, (byte)0x78, (byte)0x20 }, /* $ */
		{ (byte)0x00, (byte)0x60, (byte)0xA8, (byte)0xD0, (byte)0x2C, (byte)0x54, (byte)0x18, (byte)0x00 }, /* % */
		{ (byte)0x00, (byte)0x60, (byte)0x90, (byte)0x60, (byte)0x94, (byte)0x88, (byte)0x74, (byte)0x00 }, /* & */
		{ (byte)0x00, (byte)0x10, (byte)0x10, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ' */
		{ (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x10, (byte)0x08 }, /* ( */
		{ (byte)0x20, (byte)0x10, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x10, (byte)0x20 }, /* ) */
		{ (byte)0x00, (byte)0x10, (byte)0x54, (byte)0x38, (byte)0x54, (byte)0x10, (byte)0x00, (byte)0x00 }, /* * */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x00 }, /* + */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x40 }, /* , */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x7C, (byte)0x00, (byte)0x00, (byte)0x00 }, /* - */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x00 }, /* . */
		{ (byte)0x00, (byte)0x04, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x40, (byte)0x80, (byte)0x00 }, /* / */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* 0 */
		{ (byte)0x00, (byte)0x08, (byte)0x38, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x00 }, /* 1 */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x7C, (byte)0x00 }, /* 2 */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x18, (byte)0x04, (byte)0x44, (byte)0x38, (byte)0x00 }, /* 3 */
		{ (byte)0x00, (byte)0x08, (byte)0x18, (byte)0x28, (byte)0x48, (byte)0x7C, (byte)0x08, (byte)0x00 }, /* 4 */
		{ (byte)0x00, (byte)0x7C, (byte)0x40, (byte)0x78, (byte)0x04, (byte)0x44, (byte)0x38, (byte)0x00 }, /* 5 */
		{ (byte)0x00, (byte)0x38, (byte)0x40, (byte)0x78, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* 6 */
		{ (byte)0x00, (byte)0x7C, (byte)0x08, (byte)0x10, (byte)0x10, (byte)0x20, (byte)0x20, (byte)0x00 }, /* 7 */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* 8 */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x3C, (byte)0x04, (byte)0x38, (byte)0x00 }, /* 9 */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x00 }, /* : */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x20 }, /* ; */
		{ (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x10, (byte)0x08, (byte)0x00 }, /* < */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x7C, (byte)0x00, (byte)0x7C, (byte)0x00, (byte)0x00 }, /* = */
		{ (byte)0x00, (byte)0x00, (byte)0x20, (byte)0x10, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x00 }, /* > */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x10, (byte)0x00 }, /* ? */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x9C, (byte)0xA4, (byte)0x9C, (byte)0x80, (byte)0x70 }, /* @ */
		{ (byte)0x00, (byte)0x30, (byte)0x48, (byte)0x84, (byte)0xFC, (byte)0x84, (byte)0x84, (byte)0x00 }, /* A */
		{ (byte)0x00, (byte)0xF8, (byte)0x84, (byte)0xF8, (byte)0x84, (byte)0x84, (byte)0xF8, (byte)0x00 }, /* B */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x80, (byte)0x80, (byte)0x84, (byte)0x78, (byte)0x00 }, /* C */
		{ (byte)0x00, (byte)0xF8, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0xF8, (byte)0x00 }, /* D */
		{ (byte)0x00, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* E */
		{ (byte)0x00, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0x80, (byte)0x80, (byte)0x00 }, /* F */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x80, (byte)0x9C, (byte)0x84, (byte)0x7C, (byte)0x00 }, /* G */
		{ (byte)0x00, (byte)0x84, (byte)0x84, (byte)0xFC, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x00 }, /* H */
		{ (byte)0x00, (byte)0x38, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x38, (byte)0x00 }, /* I */
		{ (byte)0x00, (byte)0x1C, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x88, (byte)0x70, (byte)0x00 }, /* J */
		{ (byte)0x00, (byte)0x88, (byte)0x90, (byte)0xA0, (byte)0xD0, (byte)0x88, (byte)0x84, (byte)0x00 }, /* K */
		{ (byte)0x00, (byte)0x80, (byte)0x80, (byte)0x80, (byte)0x80, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* L */
		{ (byte)0x00, (byte)0x84, (byte)0xCC, (byte)0xB4, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x00 }, /* M */
		{ (byte)0x00, (byte)0x84, (byte)0xC4, (byte)0xA4, (byte)0x94, (byte)0x8C, (byte)0x84, (byte)0x00 }, /* N */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* O */
		{ (byte)0x00, (byte)0xF8, (byte)0x84, (byte)0x84, (byte)0xF8, (byte)0x80, (byte)0x80, (byte)0x00 }, /* P */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x94, (byte)0x78, (byte)0x04 }, /* Q */
		{ (byte)0x00, (byte)0xF8, (byte)0x84, (byte)0x84, (byte)0xF8, (byte)0x88, (byte)0x84, (byte)0x00 }, /* R */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x60, (byte)0x18, (byte)0x84, (byte)0x78, (byte)0x00 }, /* S */
		{ (byte)0x00, (byte)0xFE, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* T */
		{ (byte)0x00, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* U */
		{ (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x28, (byte)0x28, (byte)0x10, (byte)0x10, (byte)0x00 }, /* V */
		{ (byte)0x00, (byte)0x82, (byte)0x82, (byte)0x92, (byte)0xAA, (byte)0x44, (byte)0x44, (byte)0x00 }, /* W */
		{ (byte)0x00, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0x82, (byte)0x00 }, /* X */
		{ (byte)0x00, (byte)0x82, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* Y */
		{ (byte)0x00, (byte)0xFC, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x40, (byte)0xFC, (byte)0x00 }, /* Z */
		{ (byte)0x38, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x38 }, /* [ */
		{ (byte)0x00, (byte)0x80, (byte)0x40, (byte)0x20, (byte)0x10, (byte)0x08, (byte)0x04, (byte)0x00 }, /* \ */
		{ (byte)0x38, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x38 }, /* ] */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ^ */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xFE }, /* _ */
		{ (byte)0x10, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ` */
		{ (byte)0x00, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a */
		{ (byte)0x00, (byte)0x40, (byte)0x58, (byte)0x64, (byte)0x44, (byte)0x44, (byte)0x78, (byte)0x00 }, /* b */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x40, (byte)0x44, (byte)0x38, (byte)0x00 }, /* c */
		{ (byte)0x00, (byte)0x04, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* d */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x40, (byte)0x3C, (byte)0x00 }, /* e */
		{ (byte)0x00, (byte)0x0C, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* f */
		{ (byte)0x00, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x44, (byte)0x38 }, /* g */
		{ (byte)0x00, (byte)0x40, (byte)0x58, (byte)0x64, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x00 }, /* h */
		{ (byte)0x10, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* i */
		{ (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x04, (byte)0x04, (byte)0x24, (byte)0x44, (byte)0x38 }, /* j */
		{ (byte)0x00, (byte)0x40, (byte)0x44, (byte)0x48, (byte)0x70, (byte)0x48, (byte)0x44, (byte)0x00 }, /* k */
		{ (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* l */
		{ (byte)0x00, (byte)0x00, (byte)0xEC, (byte)0x92, (byte)0x92, (byte)0x92, (byte)0x92, (byte)0x00 }, /* m */
		{ (byte)0x00, (byte)0x00, (byte)0x58, (byte)0x64, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x00 }, /* n */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o */
		{ (byte)0x00, (byte)0x00, (byte)0x58, (byte)0x64, (byte)0x44, (byte)0x44, (byte)0x78, (byte)0x40 }, /* p */
		{ (byte)0x00, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x04 }, /* q */
		{ (byte)0x00, (byte)0x00, (byte)0x2E, (byte)0x30, (byte)0x20, (byte)0x20, (byte)0x20, (byte)0x00 }, /* r */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x40, (byte)0x38, (byte)0x04, (byte)0x78, (byte)0x00 }, /* s */
		{ (byte)0x00, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x0C, (byte)0x00 }, /* t */
		{ (byte)0x00, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* u */
		{ (byte)0x00, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x28, (byte)0x28, (byte)0x10, (byte)0x00 }, /* v */
		{ (byte)0x00, (byte)0x00, (byte)0x82, (byte)0x92, (byte)0xAA, (byte)0x44, (byte)0x44, (byte)0x00 }, /* w */
		{ (byte)0x00, (byte)0x00, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0x00 }, /* x */
		{ (byte)0x00, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x44, (byte)0x38 }, /* y */
		{ (byte)0x00, (byte)0x00, (byte)0x7C, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x7C, (byte)0x00 }, /* z */
		{ (byte)0x0C, (byte)0x10, (byte)0x10, (byte)0x60, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x0C }, /* { */
		{ (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10 }, /* | */
		{ (byte)0x60, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x0C, (byte)0x10, (byte)0x10, (byte)0x60 }, /* } */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ~ */
		{ (byte)0xFE, (byte)0xFE, (byte)0xFE, (byte)0xFE, (byte)0xFE, (byte)0xFE, (byte)0xFE, (byte)0xFE }, /* cursor */
		{ (byte)0x00, (byte)0x38, (byte)0xE4, (byte)0x40, (byte)0xE0, (byte)0x44, (byte)0x38, (byte)0x00 }, /* euro */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x00 }, /* lozenge */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x18 }, /* , */
		{ (byte)0x00, (byte)0x0C, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x60 }, /* florin */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x36 }, /* ,, */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x92, (byte)0x00 }, /* ... */
		{ (byte)0x00, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x10 }, /* dagger */
		{ (byte)0x00, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x7C, (byte)0x10 }, /* dbl dagger */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* circum */
		{ (byte)0x00, (byte)0x60, (byte)0xA8, (byte)0xD0, (byte)0x2F, (byte)0x55, (byte)0x1E, (byte)0x00 }, /* per mille */
		{ (byte)0x28, (byte)0x10, (byte)0x7C, (byte)0x80, (byte)0x78, (byte)0x04, (byte)0xF8, (byte)0x00 }, /* S caron */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x00 }, /* < */
		{ (byte)0x00, (byte)0x3E, (byte)0x48, (byte)0x4E, (byte)0x48, (byte)0x48, (byte)0x3E, (byte)0x00 }, /* OE */
		{ (byte)0x00, (byte)0x40, (byte)0x40, (byte)0x60, (byte)0xC0, (byte)0x40, (byte)0x7C, (byte)0x00 }, /* L/ */
		{ (byte)0x28, (byte)0x10, (byte)0xFC, (byte)0x08, (byte)0x30, (byte)0x40, (byte)0xFC, (byte)0x00 }, /* Z caron */
		{ (byte)0x00, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* dotless i */
		{ (byte)0x00, (byte)0x00, (byte)0x28, (byte)0x54, (byte)0x38, (byte)0x54, (byte)0x28, (byte)0x00 }, /* meta */
		{ (byte)0x00, (byte)0x18, (byte)0x10, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ` */
		{ (byte)0x00, (byte)0x08, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ' */
		{ (byte)0x00, (byte)0x36, (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* `` */
		{ (byte)0x00, (byte)0x12, (byte)0x36, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* '' */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00 }, /* bullet */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x00, (byte)0x00, (byte)0x00 }, /* en dash */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xFF, (byte)0x00, (byte)0x00, (byte)0x00 }, /* em dash */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* tilde */
		{ (byte)0x00, (byte)0xF4, (byte)0x5C, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* (TM) */
		{ (byte)0x28, (byte)0x10, (byte)0x38, (byte)0x40, (byte)0x38, (byte)0x04, (byte)0x78, (byte)0x00 }, /* s caron */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x00 }, /* > */
		{ (byte)0x00, (byte)0x00, (byte)0x34, (byte)0x4A, (byte)0x4E, (byte)0x48, (byte)0x36, (byte)0x00 }, /* oe */
		{ (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x18, (byte)0x30, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* l/ */
		{ (byte)0x28, (byte)0x10, (byte)0x7C, (byte)0x08, (byte)0x10, (byte)0x20, (byte)0x7C, (byte)0x00 }, /* z caron */
		{ (byte)0x28, (byte)0x00, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* Y" */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* nbsp */
		{ (byte)0x00, (byte)0x10, (byte)0x00, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* inv ! */
		{ (byte)0x00, (byte)0x08, (byte)0x1C, (byte)0x20, (byte)0x20, (byte)0x1C, (byte)0x08, (byte)0x00 }, /* cent */
		{ (byte)0x00, (byte)0x30, (byte)0x40, (byte)0xF0, (byte)0x40, (byte)0x44, (byte)0x78, (byte)0x00 }, /* pound */
		{ (byte)0x00, (byte)0x44, (byte)0x38, (byte)0x28, (byte)0x38, (byte)0x44, (byte)0x00, (byte)0x00 }, /* curr */
		{ (byte)0x00, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x10, (byte)0x00 }, /* yen */
		{ (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x10, (byte)0x10 }, /* broken bar */
		{ (byte)0x00, (byte)0x30, (byte)0x40, (byte)0x30, (byte)0x48, (byte)0x30, (byte)0x08, (byte)0x30 }, /* section */
		{ (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* dier */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0xB4, (byte)0xA4, (byte)0xB4, (byte)0x84, (byte)0x78 }, /* (C) */
		{ (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00, (byte)0x7C, (byte)0x00 }, /* ^a */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x24, (byte)0x48, (byte)0x24, (byte)0x00, (byte)0x00 }, /* << */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x7C, (byte)0x04, (byte)0x00, (byte)0x00 }, /* not */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x7C, (byte)0x00, (byte)0x00, (byte)0x00 }, /* shy */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0xB4, (byte)0xA4, (byte)0xA4, (byte)0x84, (byte)0x78 }, /* (R) */
		{ (byte)0x7C, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* macron */
		{ (byte)0x00, (byte)0x18, (byte)0x24, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* degree */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x7C, (byte)0x10, (byte)0x00, (byte)0x7C, (byte)0x00 }, /* +/- */
		{ (byte)0x30, (byte)0x10, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ^2 */
		{ (byte)0x18, (byte)0x08, (byte)0x18, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ^3 */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* acute */
		{ (byte)0x00, (byte)0x00, (byte)0x88, (byte)0x88, (byte)0x88, (byte)0x88, (byte)0xF4, (byte)0x80 }, /* mu */
		{ (byte)0x00, (byte)0x6C, (byte)0xE8, (byte)0x68, (byte)0x28, (byte)0x28, (byte)0x28, (byte)0x28 }, /* paragraph */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x30, (byte)0x00, (byte)0x00, (byte)0x00 }, /* dot */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10 }, /* cedilla */
		{ (byte)0x08, (byte)0x08, (byte)0x08, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00 }, /* ^1 */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00, (byte)0x7C, (byte)0x00 }, /* ^o */
		{ (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x48, (byte)0x24, (byte)0x48, (byte)0x00, (byte)0x00 }, /* >> */
		{ (byte)0x00, (byte)0x44, (byte)0x48, (byte)0x50, (byte)0x28, (byte)0x4C, (byte)0x84, (byte)0x00 }, /* 1/4 */
		{ (byte)0x00, (byte)0x44, (byte)0x48, (byte)0x50, (byte)0x38, (byte)0x48, (byte)0x8C, (byte)0x00 }, /* 1/2 */
		{ (byte)0x00, (byte)0xC4, (byte)0x48, (byte)0xD0, (byte)0x28, (byte)0x4C, (byte)0x84, (byte)0x00 }, /* 3/4 */
		{ (byte)0x00, (byte)0x10, (byte)0x00, (byte)0x10, (byte)0x20, (byte)0x44, (byte)0x38, (byte)0x00 }, /* inv ? */
		{ (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x44, (byte)0x00 }, /* A` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x44, (byte)0x00 }, /* A' */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x44, (byte)0x00 }, /* A^ */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x44, (byte)0x00 }, /* A~ */
		{ (byte)0x48, (byte)0x00, (byte)0x30, (byte)0x48, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0x00 }, /* A" */
		{ (byte)0x30, (byte)0x48, (byte)0x30, (byte)0x48, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0x00 }, /* A ring */
		{ (byte)0x00, (byte)0x7C, (byte)0x90, (byte)0x9C, (byte)0xF0, (byte)0x90, (byte)0x9C, (byte)0x00 }, /* AE */
		{ (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x80, (byte)0x80, (byte)0x84, (byte)0x78, (byte)0x10 }, /* C cedilla */
		{ (byte)0x20, (byte)0x10, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* E` */
		{ (byte)0x10, (byte)0x20, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* E' */
		{ (byte)0x30, (byte)0x48, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* E^ */
		{ (byte)0x48, (byte)0x00, (byte)0xFC, (byte)0x80, (byte)0xF8, (byte)0x80, (byte)0xFC, (byte)0x00 }, /* E" */
		{ (byte)0x20, (byte)0x10, (byte)0x38, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x38, (byte)0x00 }, /* I` */
		{ (byte)0x08, (byte)0x10, (byte)0x38, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x38, (byte)0x00 }, /* I' */
		{ (byte)0x10, (byte)0x28, (byte)0x38, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x38, (byte)0x00 }, /* I^ */
		{ (byte)0x28, (byte)0x00, (byte)0x38, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x38, (byte)0x00 }, /* I" */
		{ (byte)0x00, (byte)0x78, (byte)0x44, (byte)0xE4, (byte)0x44, (byte)0x44, (byte)0x78, (byte)0x00 }, /* Eth */
		{ (byte)0x68, (byte)0xB0, (byte)0x00, (byte)0xC4, (byte)0xA4, (byte)0x94, (byte)0x8C, (byte)0x00 }, /* N~ */
		{ (byte)0x10, (byte)0x08, (byte)0x00, (byte)0x3C, (byte)0x42, (byte)0x42, (byte)0x3C, (byte)0x00 }, /* O` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x3C, (byte)0x42, (byte)0x42, (byte)0x3C, (byte)0x00 }, /* O' */
		{ (byte)0x18, (byte)0x24, (byte)0x00, (byte)0x3C, (byte)0x42, (byte)0x42, (byte)0x3C, (byte)0x00 }, /* O^ */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x3C, (byte)0x42, (byte)0x42, (byte)0x3C, (byte)0x00 }, /* O~ */
		{ (byte)0x48, (byte)0x00, (byte)0x78, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* O" */
		{ (byte)0x00, (byte)0x00, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x28, (byte)0x44, (byte)0x00 }, /* mult */
		{ (byte)0x00, (byte)0x78, (byte)0x8C, (byte)0x94, (byte)0xA4, (byte)0xC4, (byte)0x78, (byte)0x00 }, /* O/ */
		{ (byte)0x20, (byte)0x10, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* U` */
		{ (byte)0x10, (byte)0x20, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* U' */
		{ (byte)0x30, (byte)0x48, (byte)0x00, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* U^ */
		{ (byte)0x48, (byte)0x00, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x84, (byte)0x78, (byte)0x00 }, /* U" */
		{ (byte)0x08, (byte)0x10, (byte)0x44, (byte)0x28, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x00 }, /* Y' */
		{ (byte)0x00, (byte)0x80, (byte)0xF8, (byte)0x84, (byte)0x84, (byte)0xF8, (byte)0x80, (byte)0x00 }, /* Thorn */
		{ (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x58, (byte)0x44, (byte)0x44, (byte)0x58, (byte)0x00 }, /* sz */
		{ (byte)0x10, (byte)0x08, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a' */
		{ (byte)0x18, (byte)0x24, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a^ */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a~ */
		{ (byte)0x24, (byte)0x00, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a" */
		{ (byte)0x10, (byte)0x28, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* a ring */
		{ (byte)0x00, (byte)0x00, (byte)0x6C, (byte)0x12, (byte)0x7E, (byte)0x90, (byte)0x6E, (byte)0x00 }, /* ae */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x40, (byte)0x44, (byte)0x38, (byte)0x10 }, /* c cedilla */
		{ (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x3C, (byte)0x48, (byte)0x50, (byte)0x3C, (byte)0x00 }, /* e` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x3C, (byte)0x48, (byte)0x50, (byte)0x3C, (byte)0x00 }, /* e' */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x3C, (byte)0x48, (byte)0x50, (byte)0x3C, (byte)0x00 }, /* e^ */
		{ (byte)0x24, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x7C, (byte)0x40, (byte)0x3C, (byte)0x00 }, /* e" */
		{ (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* i` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* i' */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* i^ */
		{ (byte)0x48, (byte)0x00, (byte)0x70, (byte)0x10, (byte)0x10, (byte)0x10, (byte)0x7C, (byte)0x00 }, /* i" */
		{ (byte)0x00, (byte)0x3A, (byte)0x14, (byte)0x3C, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* eth */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x58, (byte)0x64, (byte)0x44, (byte)0x44, (byte)0x00 }, /* n~ */
		{ (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o' */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o^ */
		{ (byte)0x34, (byte)0x58, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o~ */
		{ (byte)0x28, (byte)0x00, (byte)0x38, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x38, (byte)0x00 }, /* o" */
		{ (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00, (byte)0x7C, (byte)0x00, (byte)0x10, (byte)0x00 }, /* div */
		{ (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x4C, (byte)0x54, (byte)0x64, (byte)0x38, (byte)0x00 }, /* o/ */
		{ (byte)0x20, (byte)0x10, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* u` */
		{ (byte)0x08, (byte)0x10, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* u' */
		{ (byte)0x10, (byte)0x28, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* u^ */
		{ (byte)0x28, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x00 }, /* u" */
		{ (byte)0x08, (byte)0x10, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x44, (byte)0x38 }, /* y' */
		{ (byte)0x00, (byte)0x40, (byte)0x78, (byte)0x44, (byte)0x44, (byte)0x44, (byte)0x78, (byte)0x40 }, /* thorn */
		{ (byte)0x28, (byte)0x00, (byte)0x44, (byte)0x44, (byte)0x4C, (byte)0x34, (byte)0x44, (byte)0x38 }, /* y" */
	};
	
	private static final byte[][] FONT_4x4 = new byte[][] {
		{ (byte)0x00, (byte)0x00 }, /* null */
		{ (byte)0x84, (byte)0x00 }, /* grave */
		{ (byte)0x6C, (byte)0x00 }, /* dbl acute */
		{ (byte)0x40, (byte)0x00 }, /* dot */
		{ (byte)0x60, (byte)0x00 }, /* ring */
		{ (byte)0xA4, (byte)0x00 }, /* caron */
		{ (byte)0xAE, (byte)0x00 }, /* breve */
		{ (byte)0x00, (byte)0x04 }, /* ogonek */
		{ (byte)0x6A, (byte)0x60 }, /* bksp */
		{ (byte)0x2E, (byte)0x20 }, /* tab */
		{ (byte)0xE4, (byte)0xA0 }, /* enter */
		{ (byte)0xA4, (byte)0x20 }, /* alt */
		{ (byte)0x4A, (byte)0xE0 }, /* shift */
		{ (byte)0xAE, (byte)0x80 }, /* return */
		{ (byte)0x68, (byte)0xA0 }, /* fi */
		{ (byte)0x6A, (byte)0xA0 }, /* fl */
		{ (byte)0xAC, (byte)0xA0 }, /* KK */
		{ (byte)0x24, (byte)0x80 }, /* fract */
		{ (byte)0x6C, (byte)0x40 }, /* sqrt */
		{ (byte)0xE4, (byte)0xE0 }, /* sum */
		{ (byte)0xEA, (byte)0xA0 }, /* prod */
		{ (byte)0x64, (byte)0xC0 }, /* int */
		{ (byte)0x4A, (byte)0xE0 }, /* delta */
		{ (byte)0xA4, (byte)0xE0 }, /* omega */
		{ (byte)0x0E, (byte)0xA0 }, /* pi */
		{ (byte)0xC6, (byte)0x60 }, /* deriv */
		{ (byte)0x0E, (byte)0xE0 }, /* inf */
		{ (byte)0x82, (byte)0x60 }, /* esc */
		{ (byte)0x2C, (byte)0xE0 }, /* <= */
		{ (byte)0xE4, (byte)0xE0 }, /* != */
		{ (byte)0x86, (byte)0xE0 }, /* >= */
		{ (byte)0xC6, (byte)0xC6 }, /* approx */
		{ (byte)0x00, (byte)0x00 }, /* space */
		{ (byte)0x40, (byte)0x40 }, /* ! */
		{ (byte)0xAA, (byte)0x00 }, /* " */
		{ (byte)0xEA, (byte)0xE0 }, /* # */
		{ (byte)0x64, (byte)0xC4 }, /* $ */
		{ (byte)0xA4, (byte)0xA0 }, /* % */
		{ (byte)0xCE, (byte)0xE0 }, /* & */
		{ (byte)0x44, (byte)0x00 }, /* ' */
		{ (byte)0x68, (byte)0x60 }, /* ( */
		{ (byte)0xC2, (byte)0xC0 }, /* ) */
		{ (byte)0xE4, (byte)0xA0 }, /* * */
		{ (byte)0x4E, (byte)0x40 }, /* + */
		{ (byte)0x00, (byte)0x24 }, /* , */
		{ (byte)0x0E, (byte)0x00 }, /* - */
		{ (byte)0x00, (byte)0x40 }, /* . */
		{ (byte)0x24, (byte)0x80 }, /* / */
		{ (byte)0x4A, (byte)0x40 }, /* 0 */
		{ (byte)0x44, (byte)0x40 }, /* 1 */
		{ (byte)0xC4, (byte)0x60 }, /* 2 */
		{ (byte)0xC6, (byte)0xC0 }, /* 3 */
		{ (byte)0xAE, (byte)0x20 }, /* 4 */
		{ (byte)0x64, (byte)0xC0 }, /* 5 */
		{ (byte)0x46, (byte)0x60 }, /* 6 */
		{ (byte)0xE2, (byte)0x40 }, /* 7 */
		{ (byte)0x66, (byte)0x60 }, /* 8 */
		{ (byte)0x66, (byte)0x20 }, /* 9 */
		{ (byte)0x40, (byte)0x40 }, /* : */
		{ (byte)0x20, (byte)0x24 }, /* ; */
		{ (byte)0x2C, (byte)0x20 }, /* < */
		{ (byte)0xE0, (byte)0xE0 }, /* = */
		{ (byte)0x86, (byte)0x80 }, /* > */
		{ (byte)0xC2, (byte)0x40 }, /* ? */
		{ (byte)0x4E, (byte)0x60 }, /* @ */
		{ (byte)0x4E, (byte)0xA0 }, /* A */
		{ (byte)0xCE, (byte)0xC0 }, /* B */
		{ (byte)0x68, (byte)0x60 }, /* C */
		{ (byte)0xCA, (byte)0xC0 }, /* D */
		{ (byte)0xEC, (byte)0xE0 }, /* E */
		{ (byte)0xEC, (byte)0x80 }, /* F */
		{ (byte)0x6A, (byte)0x60 }, /* G */
		{ (byte)0xAE, (byte)0xA0 }, /* H */
		{ (byte)0xE4, (byte)0xE0 }, /* I */
		{ (byte)0xE4, (byte)0xC0 }, /* J */
		{ (byte)0xAC, (byte)0xA0 }, /* K */
		{ (byte)0x88, (byte)0xE0 }, /* L */
		{ (byte)0xEE, (byte)0xA0 }, /* M */
		{ (byte)0xCA, (byte)0xA0 }, /* N */
		{ (byte)0x4A, (byte)0x40 }, /* O */
		{ (byte)0xEE, (byte)0x80 }, /* P */
		{ (byte)0x4A, (byte)0x60 }, /* Q */
		{ (byte)0xEC, (byte)0xA0 }, /* R */
		{ (byte)0x64, (byte)0xC0 }, /* S */
		{ (byte)0xE4, (byte)0x40 }, /* T */
		{ (byte)0xAA, (byte)0x40 }, /* U */
		{ (byte)0xAE, (byte)0x40 }, /* V */
		{ (byte)0xAE, (byte)0xE0 }, /* W */
		{ (byte)0xA4, (byte)0xA0 }, /* X */
		{ (byte)0xA4, (byte)0x40 }, /* Y */
		{ (byte)0xC4, (byte)0x60 }, /* Z */
		{ (byte)0xE8, (byte)0xE0 }, /* [ */
		{ (byte)0x84, (byte)0x20 }, /* \ */
		{ (byte)0xE2, (byte)0xE0 }, /* ] */
		{ (byte)0x4A, (byte)0x00 }, /* ^ */
		{ (byte)0x00, (byte)0xE0 }, /* _ */
		{ (byte)0x84, (byte)0x00 }, /* ` */
		{ (byte)0x0E, (byte)0x60 }, /* a */
		{ (byte)0x46, (byte)0x60 }, /* b */
		{ (byte)0x04, (byte)0x60 }, /* c */
		{ (byte)0x26, (byte)0x60 }, /* d */
		{ (byte)0x0C, (byte)0xE0 }, /* e */
		{ (byte)0x6E, (byte)0x40 }, /* f */
		{ (byte)0x06, (byte)0x6C }, /* g */
		{ (byte)0x8C, (byte)0xA0 }, /* h */
		{ (byte)0x40, (byte)0x40 }, /* i */
		{ (byte)0x40, (byte)0xC0 }, /* j */
		{ (byte)0x8E, (byte)0xA0 }, /* k */
		{ (byte)0xC4, (byte)0xE0 }, /* l */
		{ (byte)0x0E, (byte)0xE0 }, /* m */
		{ (byte)0x0C, (byte)0xA0 }, /* n */
		{ (byte)0x06, (byte)0x60 }, /* o */
		{ (byte)0x06, (byte)0x64 }, /* p */
		{ (byte)0x06, (byte)0x62 }, /* q */
		{ (byte)0x06, (byte)0x40 }, /* r */
		{ (byte)0x06, (byte)0xC0 }, /* s */
		{ (byte)0x4E, (byte)0x40 }, /* t */
		{ (byte)0x0A, (byte)0x60 }, /* u */
		{ (byte)0x0A, (byte)0x40 }, /* v */
		{ (byte)0x0A, (byte)0xE0 }, /* w */
		{ (byte)0x06, (byte)0x60 }, /* x */
		{ (byte)0x0A, (byte)0x48 }, /* y */
		{ (byte)0x0C, (byte)0x60 }, /* z */
		{ (byte)0x6C, (byte)0x60 }, /* { */
		{ (byte)0x44, (byte)0x40 }, /* | */
		{ (byte)0xC6, (byte)0xC0 }, /* } */
		{ (byte)0xC6, (byte)0x00 }, /* ~ */
		{ (byte)0xEE, (byte)0xE0 }, /* cursor */
		{ (byte)0x6E, (byte)0x60 }, /* euro */
		{ (byte)0x4A, (byte)0x40 }, /* lozenge */
		{ (byte)0x00, (byte)0x24 }, /* , */
		{ (byte)0x6E, (byte)0x48 }, /* florin */
		{ (byte)0x00, (byte)0x6C }, /* ,, */
		{ (byte)0x00, (byte)0xA0 }, /* ... */
		{ (byte)0x4E, (byte)0x44 }, /* dagger */
		{ (byte)0x4E, (byte)0xE4 }, /* dbl dagger */
		{ (byte)0x4A, (byte)0x00 }, /* circum */
		{ (byte)0xA4, (byte)0xE0 }, /* per mille */
		{ (byte)0x64, (byte)0xC0 }, /* S caron */
		{ (byte)0x24, (byte)0x20 }, /* < */
		{ (byte)0x6C, (byte)0x60 }, /* OE */
		{ (byte)0x88, (byte)0xE0 }, /* L/ */
		{ (byte)0xC4, (byte)0x60 }, /* Z caron */
		{ (byte)0x04, (byte)0x40 }, /* dotless i */
		{ (byte)0xEA, (byte)0xE0 }, /* meta */
		{ (byte)0x64, (byte)0x00 }, /* ` */
		{ (byte)0x26, (byte)0x00 }, /* ' */
		{ (byte)0xFA, (byte)0x00 }, /* `` */
		{ (byte)0x5F, (byte)0x00 }, /* '' */
		{ (byte)0xEE, (byte)0xE0 }, /* bullet */
		{ (byte)0x0E, (byte)0x00 }, /* en dash */
		{ (byte)0x0F, (byte)0x00 }, /* em dash */
		{ (byte)0xC6, (byte)0x00 }, /* tilde */
		{ (byte)0xEA, (byte)0x00 }, /* (TM) */
		{ (byte)0x06, (byte)0xC0 }, /* s caron */
		{ (byte)0x42, (byte)0x40 }, /* > */
		{ (byte)0x0E, (byte)0xF0 }, /* oe */
		{ (byte)0xC4, (byte)0xE0 }, /* l/ */
		{ (byte)0x0C, (byte)0x60 }, /* z caron */
		{ (byte)0xA4, (byte)0x40 }, /* Y" */
		{ (byte)0x00, (byte)0x00 }, /* nbsp */
		{ (byte)0x04, (byte)0x04 }, /* inv ! */
		{ (byte)0x44, (byte)0x64 }, /* cent */
		{ (byte)0x68, (byte)0xE0 }, /* pound */
		{ (byte)0xA4, (byte)0xA0 }, /* curr */
		{ (byte)0xAE, (byte)0x40 }, /* yen */
		{ (byte)0x40, (byte)0x40 }, /* broken bar */
		{ (byte)0x6E, (byte)0xC0 }, /* section */
		{ (byte)0xA0, (byte)0x00 }, /* dier */
		{ (byte)0xFB, (byte)0x9F }, /* (C) */
		{ (byte)0xE6, (byte)0x00 }, /* ^a */
		{ (byte)0x5A, (byte)0x50 }, /* << */
		{ (byte)0x0E, (byte)0x20 }, /* not */
		{ (byte)0x0E, (byte)0x00 }, /* shy */
		{ (byte)0xF9, (byte)0xBF }, /* (R) */
		{ (byte)0xE0, (byte)0x00 }, /* macron */
		{ (byte)0x66, (byte)0x00 }, /* degree */
		{ (byte)0x4E, (byte)0x4E }, /* +/- */
		{ (byte)0xC6, (byte)0x00 }, /* ^2 */
		{ (byte)0xEC, (byte)0x00 }, /* ^3 */
		{ (byte)0x24, (byte)0x00 }, /* acute */
		{ (byte)0x0A, (byte)0xE8 }, /* mu */
		{ (byte)0xEE, (byte)0x60 }, /* paragraph */
		{ (byte)0x04, (byte)0x00 }, /* dot */
		{ (byte)0x00, (byte)0x04 }, /* cedilla */
		{ (byte)0x44, (byte)0x00 }, /* ^1 */
		{ (byte)0x66, (byte)0x00 }, /* ^o */
		{ (byte)0xA5, (byte)0xA0 }, /* >> */
		{ (byte)0xA4, (byte)0xA0 }, /* 1/4 */
		{ (byte)0xA4, (byte)0xA0 }, /* 1/2 */
		{ (byte)0xA4, (byte)0xA0 }, /* 3/4 */
		{ (byte)0x04, (byte)0x86 }, /* inv ? */
		{ (byte)0x4E, (byte)0xA0 }, /* A` */
		{ (byte)0x4E, (byte)0xA0 }, /* A' */
		{ (byte)0x4E, (byte)0xA0 }, /* A^ */
		{ (byte)0x4E, (byte)0xA0 }, /* A~ */
		{ (byte)0x4E, (byte)0xA0 }, /* A" */
		{ (byte)0x4E, (byte)0xA0 }, /* A ring */
		{ (byte)0x6C, (byte)0xE0 }, /* AE */
		{ (byte)0x68, (byte)0x64 }, /* C cedilla */
		{ (byte)0xEC, (byte)0xE0 }, /* E` */
		{ (byte)0xEC, (byte)0xE0 }, /* E' */
		{ (byte)0xEC, (byte)0xE0 }, /* E^ */
		{ (byte)0xEC, (byte)0xE0 }, /* E" */
		{ (byte)0xE4, (byte)0xE0 }, /* I` */
		{ (byte)0xE4, (byte)0xE0 }, /* I' */
		{ (byte)0xE4, (byte)0xE0 }, /* I^ */
		{ (byte)0xE4, (byte)0xE0 }, /* I" */
		{ (byte)0xCA, (byte)0xC0 }, /* Eth */
		{ (byte)0xCA, (byte)0xA0 }, /* N~ */
		{ (byte)0x4A, (byte)0x40 }, /* O` */
		{ (byte)0x4A, (byte)0x40 }, /* O' */
		{ (byte)0x4A, (byte)0x40 }, /* O^ */
		{ (byte)0x4A, (byte)0x40 }, /* O~ */
		{ (byte)0x4A, (byte)0x40 }, /* O" */
		{ (byte)0xA4, (byte)0xA0 }, /* mult */
		{ (byte)0x6A, (byte)0xC0 }, /* O/ */
		{ (byte)0xAA, (byte)0x40 }, /* U` */
		{ (byte)0xAA, (byte)0x40 }, /* U' */
		{ (byte)0xAA, (byte)0x40 }, /* U^ */
		{ (byte)0xAA, (byte)0x40 }, /* U" */
		{ (byte)0xA4, (byte)0x40 }, /* Y' */
		{ (byte)0x8E, (byte)0x80 }, /* Thorn */
		{ (byte)0x6A, (byte)0x80 }, /* sz */
		{ (byte)0x0E, (byte)0x60 }, /* a` */
		{ (byte)0x0E, (byte)0x60 }, /* a' */
		{ (byte)0x0E, (byte)0x60 }, /* a^ */
		{ (byte)0x0E, (byte)0x60 }, /* a~ */
		{ (byte)0x0E, (byte)0x60 }, /* a" */
		{ (byte)0x0E, (byte)0x60 }, /* a ring */
		{ (byte)0x0E, (byte)0x70 }, /* ae */
		{ (byte)0x04, (byte)0x64 }, /* c cedilla */
		{ (byte)0x0C, (byte)0xE0 }, /* e` */
		{ (byte)0x0C, (byte)0xE0 }, /* e' */
		{ (byte)0x0C, (byte)0xE0 }, /* e^ */
		{ (byte)0x0C, (byte)0xE0 }, /* e" */
		{ (byte)0x40, (byte)0x40 }, /* i` */
		{ (byte)0x40, (byte)0x40 }, /* i' */
		{ (byte)0x40, (byte)0x40 }, /* i^ */
		{ (byte)0x40, (byte)0x40 }, /* i" */
		{ (byte)0xE6, (byte)0x60 }, /* eth */
		{ (byte)0x0C, (byte)0xA0 }, /* n~ */
		{ (byte)0x06, (byte)0x60 }, /* o` */
		{ (byte)0x06, (byte)0x60 }, /* o' */
		{ (byte)0x06, (byte)0x60 }, /* o^ */
		{ (byte)0x06, (byte)0x60 }, /* o~ */
		{ (byte)0x06, (byte)0x60 }, /* o" */
		{ (byte)0x4E, (byte)0x40 }, /* div */
		{ (byte)0x07, (byte)0xE0 }, /* o/ */
		{ (byte)0x0A, (byte)0x60 }, /* u` */
		{ (byte)0x0A, (byte)0x60 }, /* u' */
		{ (byte)0x0A, (byte)0x60 }, /* u^ */
		{ (byte)0x0A, (byte)0x60 }, /* u" */
		{ (byte)0x0A, (byte)0x48 }, /* y' */
		{ (byte)0x46, (byte)0x64 }, /* thorn */
		{ (byte)0x0A, (byte)0x48 }, /* y" */
	};
	
	public int getFontRow8x8(int ch, int row) {
		return FONT_8x8[ch & 0xFF][row & 0x7] & 0xFF;
	}
	
	public int getLBearing(int ch) {
		int row = 0;
		for (int i = 0; i < 8; i++) {
			row |= FONT_8x8[ch & 0xFF][i] & 0xFF;
		}
		if (row == 0) {
			return 0;
		} else {
			int lbearing = 0;
			while ((row & 0x80) == 0) {
				row <<= 1;
				lbearing++;
			}
			return lbearing;
		}
	}
	
	public int getRBearing(int ch) {
		int row = 0;
		for (int i = 0; i < 8; i++) {
			row |= FONT_8x8[ch & 0xFF][i] & 0xFF;
		}
		if (row == 0) {
			return 2;
		} else {
			int rbearing = 0;
			while ((row & 0x01) == 0) {
				row >>= 1;
				rbearing++;
			}
			return rbearing;
		}
	}
	
	public int getFontRow4x4(int ch, int row) {
		byte temp = FONT_4x4[ch & 0xFF][(row & 0x3) >> 1];
		if ((row & 0x1) != 0) return (temp & 0x0F) | ((temp & 0x0F) << 4);
		else                  return (temp & 0xF0) | ((temp & 0xF0) >> 4);
	}
}
